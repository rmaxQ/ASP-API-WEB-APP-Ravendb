@using Biblioteka.Model.Entities
@model Biblioteka.Web.Models.MemberViewModel

@{
    ViewData["Title"] = "Members";
}

<h1>@ViewData["Title"]</h1>
<hr />
<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                FirstName
            </th>
            <th>
                LastName
            </th>
            <th>
                PhoneNumber
            </th>
            <th>
                Email
            </th>
            <th>
                MembershipSince
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Members)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MembershipSince)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id.Replace("members/","")">Edit</a> |
                    <a class="btn btn-danger" asp-action="Remove" asp-route-id="@item.Id.Replace("members/","")">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination">
    @if (Model.CurrentPage > 1)
    {
        <a href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })" class="btn btn-primary">Previous</a>
    }

    @for (int i = 1; i <= (Model.TotalCount + Model.PageSize - 1) / Model.PageSize; i++)
    {
        <a href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })"
           class="@(i == Model.CurrentPage ? "active" : "") btn btn-primary">@i</a>
    }

    @if (Model.CurrentPage < (Model.TotalCount + Model.PageSize - 1) / Model.PageSize)
    {
        <a href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })" class="btn btn-primary">Next</a>
    }
</div>